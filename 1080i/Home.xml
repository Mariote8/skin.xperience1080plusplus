<?xml version="1.0" encoding="UTF-8"?>
<window>
	<defaultcontrol>525</defaultcontrol>
	<allowoverlay>yes</allowoverlay>
	<backgroundcolor>0</backgroundcolor>
	<onload condition="System.HasAddon(script.grab.fanart)">RunScript(script.grab.fanart,mode=random,refresh=10)</onload>
	<onload condition="System.HasAddon(plugin.video.plexbmc) + Skin.HasSetting(plexbmc)">RunScript(plugin.video.plexbmc,skin)</onload>
	<onload condition="System.HasAddon(plugin.video.plexbmc) + Skin.HasSetting(plexbmc)">RunScript(plugin.video.plexbmc,shelf)</onload>
	<onload condition="System.HasAddon(plugin.video.plexbmc) + Skin.HasSetting(plexbmc)">RunScript(plugin.video.plexbmc,channelShelf)</onload>
	<onload condition="!Skin.HasSetting(Skin.Initialization)">SetProperty(Skin.Initialization,1,startup)</onload>
	<onload condition="!Skin.HasSetting(Skin.Initialization) | IsEmpty(Window(startup).Property(Started))">AlarmClock(Skin.Initialization,ReplaceWindow(startup),00:01,silent)</onload>
	<onload condition="Container(20).HasFocus(2) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMoveThree,Control.Move(5032,1),00:04,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(2) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMoveTwo,Control.Move(5022,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(2) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMoveTwo,Control.Move(50222,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(3) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(2022,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(3) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(20222,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(4) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(3022,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(11) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(11022,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(10) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(10022,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(5) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(4022,1),00:07,silent,loop)</onload>
	<onload condition="Container(20).HasFocus(5) + [stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))]">AlarmClock(HomeTileMove,Control.Move(40222,1),00:07,silent,loop)</onload>
	<onload>AlarmClock(PvrTileMove,Control.Move(7891,1),00:07,silent,loop)</onload>
	<onload condition="!Skin.HasSetting(HideHomeProfileInfo)">AlarmClock(ProfileMove,Control.Move(30,1),00:10,silent,loop)</onload>
	<onload condition="IsEmpty(Skin.String(musiccolor.name)) | !SubString(Skin.String(musiccolor.name),Tiles)">Skin.SetString(musiccolor.name,Yellow Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(tvcolor.name)) | !SubString(Skin.String(tvcolor.name),Tiles)">Skin.SetString(tvcolor.name,Magenta Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(moviecolor.name)) | !SubString(Skin.String(moviecolor.name),Tiles)">Skin.SetString(moviecolor.name,Cyan Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(appcolor.name)) | !SubString(Skin.String(appcolor.name),Tiles)">Skin.SetString(appcolor.name,Solid Black Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(homecolor.name)) | !SubString(Skin.String(homecolor.name),Tiles)">Skin.SetString(homecolor.name,Purple Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(pvrcolor.name)) | !SubString(Skin.String(pvrcolor.name),Tiles)">Skin.SetString(pvrcolor.name,Green Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(picturescolor.name)) | !SubString(Skin.String(picturescolor.name),Tiles)">Skin.SetString(picturescolor.name,Orange Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(settingscolor.name)) | !SubString(Skin.String(settingscolor.name),Tiles)">Skin.SetString(settingscolor.name,Purple Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(weathercolor.name)) | !SubString(Skin.String(weathercolor.name),Tiles)">Skin.SetString(weathercolor.name,Lime Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(channelscolor.name)) | !SubString(Skin.String(channelscolor.name),Tiles)">Skin.SetString(channelscolor.name,Red Tiles)</onload>
	<onload condition="IsEmpty(Skin.String(musicbordercolor.name)) | !SubString(Skin.String(musicbordercolor.name),TileBorder)">Skin.SetString(musicbordercolor.name,Green TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(tvbordercolor.name)) | !SubString(Skin.String(tvbordercolor.name),TileBorder)">Skin.SetString(tvbordercolor.name,Blue TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(moviebordercolor.name)) | !SubString(Skin.String(moviebordercolor.name),TileBorder)">Skin.SetString(moviebordercolor.name,Red TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(appbordercolor.name)) | !SubString(Skin.String(appbordercolor.name),TileBorder)">Skin.SetString(appbordercolor.name,Orange TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(homebordercolor.name)) | !SubString(Skin.String(homebordercolor.name),TileBorder)">Skin.SetString(homebordercolor.name,Cyan TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(pvrbordercolor.name)) | !SubString(Skin.String(pvrbordercolor.name),TileBorder)">Skin.SetString(pvrbordercolor.name,Magenta TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(picturesbordercolor.name)) | !SubString(Skin.String(picturesbordercolor.name),TileBorder)">Skin.SetString(picturesbordercolor.name,Yellow TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(settingsbordercolor.name)) | !SubString(Skin.String(settingsbordercolor.name),TileBorder)">Skin.SetString(settingsbordercolor.name,Lime TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(weatherbordercolor.name)) | !SubString(Skin.String(weatherbordercolor.name),TileBorder)">Skin.SetString(weatherbordercolor.name,Purple TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(channelsbordercolor.name)) | !SubString(Skin.String(channelsbordercolor.name),TileBorder)">Skin.SetString(channelsbordercolor.name,Solid Black TileBorder)</onload>
	<onload condition="IsEmpty(Skin.String(panelcolor.name)) | !SubString(Skin.String(panelcolor.name),Panel)">Skin.SetString(panelcolor.name,Black Panel)</onload>
	<onload condition="IsEmpty(Skin.String(focuscolor.name)) | !SubString(Skin.String(focuscolor.name),Focus)">Skin.SetString(focuscolor.name,Green Focus)</onload>
	<onload condition="IsEmpty(Skin.String(backgroundcolor.name)) | !SubString(Skin.String(backgroundcolor.name),Background)">Skin.SetString(backgroundcolor.name,Black Background)</onload>
	<onunload>CancelAlarm(HomeTileMove,true)</onunload>
	<onunload>CancelAlarm(HomeTileMoveTwo,true)</onunload>
	<onunload>CancelAlarm(HomeTileMoveThree,true)</onunload>
	<onunload condition="!Skin.HasSetting(HideHomeProfileInfo)">CancelAlarm(ProfileMove,true)</onunload>
	<controls>
		<!-- Backgrounds -->
		<include condition="stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))">CommonItemsHome</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">CommonItemsHomeClassic</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">CommonItemsHomeHorizontal</include>
		<!-- Home screen -->
		<include condition="stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))">HomeControlList</include>
		<include condition="stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))">HomeControlListLabels</include>
		<include condition="stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))">HomeItems</include>
		<include condition="stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))">HomeProfileInfo</include>
		<!-- Home classic screen -->
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeSubMenuMovies</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeSubMenuTVShows</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeSubMenuMusic</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeSubMenuLiveTV</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeSubMenuPhotos</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeSubMenuSettings</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeWraplist</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeWraplistAnimation</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">HomeProfileInfoClassic</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic)">Recent-Added</include>
		<!-- Home Horizontal screen -->
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuOverlayHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuMoviesHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuTVShowsHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuMusicHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuLiveTVHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuWeatherHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeSubMenuSettingsHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeWraplistHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeProfileInfoHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">HomeRecentTitleHorizontal</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal)">Recent-Added-Horizontal</include>
		<!-- Fade background -->
		<include>FadeBackground</include>
		<!-- Bottom buttons -->
		<include condition="[stringcompare(Skin.String(HomeScreen),metro) | IsEmpty(Skin.String(HomeScreen))] + !Skin.HasSetting(HideHomeButtons)">shutdown-favs</include>
		<include condition="stringcompare(Skin.String(HomeScreen),classic) + !Skin.HasSetting(HideHomeButtons)">shutdown-favs-classic</include>
		<include condition="stringcompare(Skin.String(HomeScreen),horizontal) + !Skin.HasSetting(HideHomeButtons)">shutdown-favs-horizontal</include>
		<!-- Common/profile info -->
		<include>Common-Home-Info</include>
	</controls>
</window>